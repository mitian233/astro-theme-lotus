---
import BaseHead from "../../components/BaseHead.astro";
import Footer from "../../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import { getCollection, type CollectionEntry } from "astro:content";
import FormattedDate from "../../components/FormattedDate.astro";
import ContainerLayouts from "../../layouts/ContainerLayouts.astro";
import "../../styles/news.css";
import type { GetStaticPathsOptions, Page } from "astro";
import { getAllCategroies, sortItemsByDateDesc } from "../../utils/data_utils";

// const posts = (await getCollection("blog")).sort(
//   (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
// );

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const allPosts = await getCollection("blog");
  // Filter posts to only include featured ones
  const featuredPosts = allPosts
    .filter((post) => post.data.featured)
    .sort(sortItemsByDateDesc);
  return paginate(featuredPosts, { pageSize: 2 });
}

interface Props {
  page: Page<CollectionEntry<"blog">>;
}

const { page } = Astro.props;
const allPosts = await getCollection("blog");
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body style="opacity: 0;">
    <ContainerLayouts>
      <section class="headline">
        <div class="headline__inner">
          <h2 class="headline__name">FEATURED</h2>
          <p class="headline__ja">
            <span>特集</span>
          </p>
        </div>
      </section>
      <section class="list">
        <section class="list__inner">
          <div class="list__content" style="border-top: #383834 solid 1px;">
            <ul>
              {
                page.data.map((post) => (
                  <li>
                    <a href={`/blog/${post.id}/`} class="insite">
                      <span class="list--date">
                        <FormattedDate date={post.data.pubDate} />
                      </span>
                      <span class="list--category">{post.data.category}</span>
                      <span class="list--text">{post.data.title}</span>
                    </a>
                  </li>
                ))
              }
            </ul>
          </div>

          {/* Pagination */}
          {
            page.lastPage > 1 && (
              <div class="list__paging">
                <p class="paging--prev">
                  <a
                    href={page.url.prev || "#"}
                    class={`${page.url.prev ? "insite" : "is--limit"}`}
                  />
                </p>
                <p class="paging--next">
                  <a
                    href={page.url.next || "#"}
                    class={`${page.url.next ? "insite" : "is--limit"}`}
                  />
                </p>
              </div>
            )
          }
        </section>
      </section>
    </ContainerLayouts>
    <Footer />
  </body>
</html>
